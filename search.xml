<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Swagger的使用]]></title>
      <url>/2020/12/16/Swagger%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h3 id="1、描述"><a href="#1、描述" class="headerlink" title="1、描述"></a>1、描述</h3><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。</p>
<p>作用： </p>
<h6 id="1-接口的文档在线自动生成"><a href="#1-接口的文档在线自动生成" class="headerlink" title="1.接口的文档在线自动生成"></a>1.接口的文档在线自动生成</h6><h6 id="2-功能测试"><a href="#2-功能测试" class="headerlink" title="2.功能测试"></a>2.功能测试</h6><h3 id="2、运用"><a href="#2、运用" class="headerlink" title="2、运用"></a>2、运用</h3><h6 id="a-maven导入Swagger"><a href="#a-maven导入Swagger" class="headerlink" title="a)maven导入Swagger"></a>a)maven导入Swagger</h6><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">      &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">     &lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<h6 id="b-创建Swagger2配置类"><a href="#b-创建Swagger2配置类" class="headerlink" title="b) 创建Swagger2配置类"></a>b) 创建Swagger2配置类</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: jpademo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Swagger</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZengGuangfu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2018-10-24 10:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">         .apiInfo(apiInfo())</span><br><span class="line">         .select()</span><br><span class="line">         .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.example.springbootjpa.jpademo.controller&quot;</span>))</span><br><span class="line">         .paths(PathSelectors.any())</span><br><span class="line">         .build();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">         .title(<span class="string">&quot;利用swagger2构建的API文档&quot;</span>)</span><br><span class="line">         .description(<span class="string">&quot;用restful风格写接口&quot;</span>)</span><br><span class="line">         .termsOfServiceUrl(<span class="string">&quot;&quot;</span>)</span><br><span class="line">         .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">         .build();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上所示，docket() 方法创建Docket的Bean对象，apiInfo()则是创建ApiInfo的基本信息。</p>
<h3 id="3、注解及其说明"><a href="#3、注解及其说明" class="headerlink" title="3、注解及其说明"></a>3、注解及其说明</h3><p>@Api : 用在类上，说明该类的主要作用。</p>
<p>@ApiOperation：用在方法上，给API增加方法说明。</p>
<p>@ApiImplicitParams : 用在方法上，包含一组参数说明。</p>
<p>@ApiImplicitParam：用来注解来给方法入参增加说明。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">![apiParam.png](https:<span class="comment">//upload-images.jianshu.io/upload_images/14526729-96858d81051a5c02.png?imageMogr2/auto-orient/strip|imageView2/2/w/725/format/webp)</span></span><br></pre></td></tr></table></figure>

<p>@ApiResponses：用于表示一组响应。</p>
<p>@ApiResponse：用在@ApiResponses中，一般用于表达一个错误的响应信息</p>
<p> l <strong>code</strong>：数字，例如400</p>
<p> l <strong>message</strong>：信息，例如”请求参数没填好”</p>
<p> l <strong>response</strong>：抛出异常的类</p>
<p>@ApiModel：用在返回对象类上，描述一个Model的信息（一般用在请求参数无法使用@ApiImplicitParam注解进行描述的时候）</p>
<p> l <strong>@ApiModelProperty</strong>：描述一个model的属性</p>
<h6 id="以下仅仅是一个例子，其实我个人在开发中很少使用-ApiImplicitParam-作为参数的描述，这样描述在参数过多的条件下会有点麻烦。个人一般是将参数封装为一个完整对象（特别是GET方法），并利用-ApiModel注解去定义参数，如果不需要作为查询条件的，则加一个hidden-true，如果是必填属性，则增加一个required-true即可。"><a href="#以下仅仅是一个例子，其实我个人在开发中很少使用-ApiImplicitParam-作为参数的描述，这样描述在参数过多的条件下会有点麻烦。个人一般是将参数封装为一个完整对象（特别是GET方法），并利用-ApiModel注解去定义参数，如果不需要作为查询条件的，则加一个hidden-true，如果是必填属性，则增加一个required-true即可。" class="headerlink" title="以下仅仅是一个例子，其实我个人在开发中很少使用@ApiImplicitParam 作为参数的描述，这样描述在参数过多的条件下会有点麻烦。个人一般是将参数封装为一个完整对象（特别是GET方法），并利用@ApiModel注解去定义参数，如果不需要作为查询条件的，则加一个hidden = true，如果是必填属性，则增加一个required = true即可。"></a>以下仅仅是一个例子，其实我个人在开发中很少使用@ApiImplicitParam 作为参数的描述，这样描述在参数过多的条件下会有点麻烦。个人一般是将参数封装为一个完整对象（特别是GET方法），并利用@ApiModel注解去定义参数，如果不需要作为查询条件的，则加一个hidden = true，如果是必填属性，则增加一个required = true即可。</h6><h6 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: jpademo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: EmployeeController</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZengGuangfu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2018-10-23 11:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;emp&quot;)</span></span><br><span class="line"><span class="meta">@Api(value = &quot;用户管理类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">private</span> EmployeeReposiroty employeeReposiroty;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 增加人物</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@PostMapping(value = &quot;employee&quot;)</span></span><br><span class="line">     <span class="meta">@ApiOperation(value = &quot;新增一个用户&quot;,notes = &quot;新增之后返回对象&quot;)</span></span><br><span class="line">     <span class="meta">@ApiImplicitParam(paramType = &quot;query&quot;,name = &quot;employee&quot;,value = &quot;用户&quot;,required = true)</span></span><br><span class="line">     <span class="meta">@ApiResponse(code = 400,message = &quot;参数没有填好&quot;,response = String.class)</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> String <span class="title">insert</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">         Employee employee1 = employeeReposiroty.save(employee);</span><br><span class="line">         <span class="keyword">if</span>(employee1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">             <span class="keyword">return</span> SysNode.Judge.SUCCESS.getResult();</span><br><span class="line">         &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">return</span> SysNode.Judge.FAILD.getResult();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 删除单个用户</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@DeleteMapping(value = &quot;employee/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="meta">@ApiOperation(value = &quot;删除用户&quot;,notes = &quot;根据成员id删除单个用户&quot;)</span></span><br><span class="line">      <span class="meta">@ApiImplicitParam(paramType = &quot;path&quot;,name = &quot;id&quot;,value = &quot;用户id&quot;,required = true,dataType = &quot;Integer&quot;)</span></span><br><span class="line">      <span class="meta">@ApiResponse(code = 400,message = &quot;参数没有填好&quot;,response = String.class)</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span>Integer id)</span></span>&#123;</span><br><span class="line">           <span class="keyword">try</span>&#123;</span><br><span class="line">                employeeReposiroty.deleteById(id);</span><br><span class="line">                <span class="keyword">return</span> SysNode.Judge.SUCCESS.getResult();</span><br><span class="line">           &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">               <span class="keyword">return</span> SysNode.Judge.FAILD.getResult();</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 修改单个成员</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@PutMapping(value = &quot;employee/&#123;id&#125;&quot;)</span></span><br><span class="line">      <span class="meta">@ApiOperation(value = &quot;修改用户信息&quot;,notes = &quot;根据成员id修改单个用户&quot;)</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(Employee employee)</span></span>&#123;</span><br><span class="line">           <span class="comment">/**</span></span><br><span class="line"><span class="comment">           * save方法如果参数属性缺失，会导致原本存在的数据为null</span></span><br><span class="line"><span class="comment">           */</span></span><br><span class="line">           Employee employee1 = employeeReposiroty.saveAndFlush(employee);</span><br><span class="line">           <span class="keyword">if</span> (employee1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> SysNode.Judge.SUCCESS.getResult();</span><br><span class="line">           &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">return</span> SysNode.Judge.FAILD.getResult();</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 获取所有成员,升序排列</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@GetMapping(value = &quot;employee/sort&quot;)</span></span><br><span class="line">      <span class="meta">@ApiOperation(value = &quot;查询全部用户&quot;,notes = &quot;默认根据升序查询全部用户信息&quot;)</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">           Sort orders = <span class="keyword">new</span> Sort(Sort.Direction.DESC,<span class="string">&quot;employeeId&quot;</span>);</span><br><span class="line">           List&lt;Employee&gt; employeeList = employeeReposiroty.findAll(orders);</span><br><span class="line">           <span class="keyword">return</span> employeeList;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有成员,升序排列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="meta">@GetMapping(value = &quot;employee/pageSort&quot;)</span></span><br><span class="line">      <span class="meta">@ApiOperation(value = &quot;查询用户信息&quot;,notes = &quot;查询用户信息&quot;)</span></span><br><span class="line">      <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">           @ApiImplicitParam(paramType = &quot;query&quot;,name = &quot;sort&quot;,value = &quot;排序方式:asc|desc&quot;,dataType = &quot;String&quot;,required = true),</span></span><br><span class="line"><span class="meta">           @ApiImplicitParam(paramType = &quot;query&quot;,name = &quot;pagenumber&quot;,value = &quot;第几页&quot;,dataType = &quot;Integer&quot;,required = true),</span></span><br><span class="line"><span class="meta">           @ApiImplicitParam(paramType = &quot;query&quot;,name = &quot;pageSize&quot;,value = &quot;分页数&quot;,dataType = &quot;Integer&quot;,required = true)</span></span><br><span class="line"><span class="meta">      &#125;)</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">findAllByPage</span><span class="params">(String sort,Integer pagenumber,Integer pageSize)</span></span>&#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">                Sort.Direction sortlast;</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;desc&quot;</span>.equals(sort.toLowerCase()))&#123;</span><br><span class="line">                     sortlast = Sort.Direction.DESC;</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;          </span><br><span class="line">                      sortlast = Sort.Direction.ASC;</span><br><span class="line">               &#125;</span><br><span class="line">                     Sort orders = <span class="keyword">new</span> Sort(sortlast, <span class="string">&quot;employeeId&quot;</span>);</span><br><span class="line">                     Pageable pageable = <span class="keyword">new</span> PageRequest(pagenumber, pageSize, orders);</span><br><span class="line">                     Page&lt;Employee&gt; employeePage = employeeReposiroty.findAll(pageable);</span><br><span class="line">                     List&lt;Employee&gt; employeeList = employeePage.getContent();</span><br><span class="line">                     <span class="keyword">return</span> employeeList;</span><br><span class="line">           &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义拓展jpa，根据用户名查找单个用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="meta">@GetMapping(value = &quot;employee/find/&#123;username&#125;&quot;)</span></span><br><span class="line">     <span class="meta">@ApiOperation(value = &quot;查询用户信息&quot;,notes = &quot;根据用户登录名查询该用户信息&quot;)</span></span><br><span class="line">     <span class="meta">@ApiImplicitParam(paramType = &quot;path&quot;,name = &quot;username&quot;,value = &quot;用户登录名&quot;,required = true,dataType = &quot;String&quot;)</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> Employee <span class="title">findByUsername</span><span class="params">(<span class="meta">@PathVariable(&quot;username&quot;)</span> String username)</span></span>&#123;</span><br><span class="line">         List&lt;Employee&gt; employeeList = employeeReposiroty.findByUserNameOrderByEmployeeIdAsc(username);</span><br><span class="line">         <span class="keyword">if</span> (employeeList != <span class="keyword">null</span> &amp;&amp; !employeeList.isEmpty())&#123;</span><br><span class="line">             <span class="keyword">return</span> employeeList.get(<span class="number">0</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="meta">@GetMapping(value = &quot;employee/grade&quot;)</span></span><br><span class="line">     <span class="keyword">public</span> List&lt;Object[]&gt; findEmployeeAndGrade()&#123;</span><br><span class="line">         Pageable pageable = <span class="keyword">new</span> PageRequest(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">         Page&lt;Object[]&gt; page = employeeReposiroty.findEmployeeAndGrade(pageable);</span><br><span class="line">         System.out.println(page.getTotalElements()+<span class="string">&quot;----------结果总数------------&quot;</span>);</span><br><span class="line">         System.out.println(page.getTotalPages()+<span class="string">&quot;--------根据pageSize的总页数-----------&quot;</span>);</span><br><span class="line">         System.out.println(page.getNumber()+<span class="string">&quot;--------当前页数，pageNumber----------&quot;</span>);</span><br><span class="line">         System.out.println(page.getNumberOfElements()+<span class="string">&quot;--------当前页有几个数据--------&quot;</span>);</span><br><span class="line">         System.out.println(page.getSize()+<span class="string">&quot;---------PageSize-------------&quot;</span>);</span><br><span class="line">         System.out.println(page.getSort()+<span class="string">&quot;---------排序方式，没有则是&#x27;UNSORTED&#x27;----------&quot;</span>);</span><br><span class="line">         List&lt;Object[]&gt; objects = page.getContent();</span><br><span class="line">         <span class="keyword">return</span> objects;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、测试登录-localhost-8080-swagger-ui-html"><a href="#4、测试登录-localhost-8080-swagger-ui-html" class="headerlink" title="4、测试登录 localhost:8080/swagger-ui.html)"></a>4、测试登录 localhost:8080/swagger-ui.html)</h3><p><img src="https://upload-images.jianshu.io/upload_images/14526729-a63bd269067f81aa.png" alt="swagger-ui"></p>
<p>API 操作测试，修改</p>
<p><img src="https://upload-images.jianshu.io/upload_images/14526729-51f4f46d2d5dfcbe.png" alt="testParam"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/14526729-8a3e9860ad2ef664.png" alt="testResult"></p>
<h3 id="5、-ApiModel-接收对象传参"><a href="#5、-ApiModel-接收对象传参" class="headerlink" title="5、@ApiModel 接收对象传参"></a>5、@ApiModel 接收对象传参</h3><p><strong><code>注意： 在后台采用对象接收参数时，Swagger自带的工具采用的是JSON传参， 测试时需要在参数上加入@RequestBody,正常运行采用form或URL提交时候请删除。</code></strong></p>
<h6 id="例子：-1"><a href="#例子：-1" class="headerlink" title="例子："></a>例子：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: jpademo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: Employee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ZengGuangfu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2018-10-23 10:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">​</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel(value = &quot;用户对象模型&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">​</span><br><span class="line">   <span class="keyword">private</span> Integer employeeId;</span><br><span class="line">​</span><br><span class="line">   <span class="meta">@ApiModelProperty(value = &quot;用户名&quot;,required = true)</span></span><br><span class="line">   <span class="keyword">private</span> String userName;</span><br><span class="line">​</span><br><span class="line">   <span class="meta">@ApiModelProperty(value = &quot;年龄&quot;,required = true)</span></span><br><span class="line">   <span class="keyword">private</span> Integer age;</span><br><span class="line">​</span><br><span class="line">   <span class="meta">@ApiModelProperty(value = &quot;年级&quot;,required = true)</span></span><br><span class="line">   <span class="keyword">private</span> Integer graId;</span><br><span class="line">​</span><br><span class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Audit</span></span>&#123;&#125;;</span><br><span class="line">​</span><br><span class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Children</span></span>&#123;&#125;;</span><br><span class="line">​</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      
        <categories>
            
            <category> 教程 </category>
            
            <category> Swagger </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Swagger </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[测试代码功能]]></title>
      <url>/2020/12/15/Controller/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zc.web.controller.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.FastByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.Producer;</span><br><span class="line"><span class="keyword">import</span> com.zc.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.zc.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.zc.common.core.redis.RedisCache;</span><br><span class="line"><span class="keyword">import</span> com.zc.common.utils.sign.Base64;</span><br><span class="line"><span class="keyword">import</span> com.zc.common.utils.uuid.IdUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码操作处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zhangchao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="meta">@Resource(name = &quot;captchaProducer&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Producer captchaProducer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;captchaProducerMath&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Producer captchaProducerMath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCache redisCache;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证码类型</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;zc.captchaType&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String captchaType;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/captchaImage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResult <span class="title">getCode</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 保存验证码信息</span></span><br><span class="line">        String uuid = IdUtils.simpleUUID();</span><br><span class="line">        String verifyKey = Constants.CAPTCHA_CODE_KEY + uuid;</span><br><span class="line"></span><br><span class="line">        String capStr = <span class="keyword">null</span>, code = <span class="keyword">null</span>;</span><br><span class="line">        BufferedImage image = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成验证码</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;math&quot;</span>.equals(captchaType))</span><br><span class="line">        &#123;</span><br><span class="line">            String capText = captchaProducerMath.createText();</span><br><span class="line">            capStr = capText.substring(<span class="number">0</span>, capText.lastIndexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">            code = capText.substring(capText.lastIndexOf(<span class="string">&quot;@&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">            image = captchaProducerMath.createImage(capStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;char&quot;</span>.equals(captchaType))</span><br><span class="line">        &#123;</span><br><span class="line">            capStr = code = captchaProducer.createText();</span><br><span class="line">            image = captchaProducer.createImage(capStr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);</span><br><span class="line">        <span class="comment">// 转换流信息写出</span></span><br><span class="line">        FastByteArrayOutputStream os = <span class="keyword">new</span> FastByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, os);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        AjaxResult ajax = AjaxResult.success();</span><br><span class="line">        ajax.put(<span class="string">&quot;uuid&quot;</span>, uuid);</span><br><span class="line">        ajax.put(<span class="string">&quot;img&quot;</span>, Base64.encode(os.toByteArray()));</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的第一篇博客]]></title>
      <url>/2020/12/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git clone git<span class="meta">@github</span>.com:codefine/hexo-theme-mellow.git themes/mellow</span><br></pre></td></tr></table></figure>




]]></content>
      
        <categories>
            
            <category> 教程 </category>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2020/12/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
